version: "3.9"

services:
  auto-instrument:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Configura variáveis de ambiente para o OpenTelemetry
      #- JAVA_TOOL_OPTIONS="-javaagent:/app/opentelemetry-javaagent.jar"
      #- OTEL_TRACES_EXPORTER=otlp,logging
      # - OTEL_METRICS_EXPORTER=logging, otel
      # - OTEL_LOGS_EXPORTER=logging
      # - OTEL_METRIC_EXPORT_INTERVAL=15000
      - OTEL_SERVICE_NAME=auto-instrument
      - OTEL_RESOURCE_ATTRIBUTES=service.name=auto-instrument,service.version=v0.0.1,service.env=dev
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcollector:4318
      - OTEL_EXPORTER_OTLP_INSECURE=true
    networks:
      - otel

# OpenTelemetry Collector
  otelcollector:
    networks:
      - otel
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
    image: otel/opentelemetry-collector-contrib:0.118.0
    volumes:
      - ./config/collector/otelcol-config.yml:/etc/otel-collector-config.yml
    command:
      - "--config=/etc/otel-collector-config.yml"
      - "--set=service.telemetry.logs.level=INFO"
    ports:
      - "4318:4318" # Porta OTLP HTTP
      - "4317:4317" # Porta OTLP gRPC
  
  # Grafana para visualização de métricas, logs e traces
  grafana:
    networks:
      - otel
    image: grafana/grafana:11.4.0
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./config/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
  
  # Grafana Tempo para armaazenamento de traces
  tempo:
    networks:
      - otel
    image: grafana/tempo:2.7.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/grafana/tempo.yaml:/etc/tempo.yaml
    depends_on:
      - grafana
  
  # Grafana Mimir para armazenamento de métricas
  mimir:
    networks:
      - otel
    image: grafana/mimir:2.15.0
    command: [ "-config.file=/etc/mimir.yaml" ]
    volumes:
      - ./config/grafana/mimir.yaml:/etc/mimir.yaml
    depends_on:
      - grafana
  
  # Grafana Loki para armazenamento de logs
  loki:
    networks:
      - otel
    image: grafana/loki:3.3.2
    command: [ "-config.file=/etc/loki/loki.yaml" ]
    volumes:
      - ./config/grafana/loki.yaml:/etc/loki/loki.yaml
    depends_on:
      - grafana
  
  # Grafana K6 para gerar carga na aplicação
  ##########################################
  #### Adicione abaixo o serviço do K6 #####
  ##########################################

networks:
  otel:
    name: otel
    driver: bridge
logging:
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"
