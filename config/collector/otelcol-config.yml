receivers:
  otlp: # doc. 
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  
  filelog: # doc. https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/filelogreceiver/README.md
    poll_interval: "200ms"
    start_at: end
    include: [/etc/log/*/*.log]
  
  prometheus:
    config:
      scrape_configs:
      - job_name: otel-collector-metrics
        scrape_interval: 30s
        static_configs:
        - targets: ['127.0.0.1:8888']
processors:
  batch:
    send_batch_size: 100
    timeout: 5s
  memory_limiter:
    check_interval: 5s
    limit_percentage: 75

  resourcedetection/system:
    detectors: [ "system", docker ]
    system:
      hostname_sources: [ "os" ]
  
  transform/parse_json_body:
    error_mode: ignore
    log_statements:
      - context: log
        conditions:
          - body != nil and Substring(body, 0, 2) == "{\""
        statements:
          - set(cache, ParseJSON(body))
          - flatten(cache, "")
          - merge_maps(attributes, cache, "upsert")
          - set(severity_text, "TRACE") where attributes["Level"] == "Trace"
          - set(severity_number, 1) where attributes["Level"] == "Trace"
          - set(severity_text, "DEBUG") where attributes["Level"] == "Debug"
          - set(severity_number, 5) where attributes["Level"] == "Debug"
          - set(severity_text, "INFO") where attributes["Level"] == "Information"
          - set(severity_number, 9) where attributes["Level"] == "Information"
          - set(severity_text, "WARN") where attributes["Level"] == "Warning"
          - set(severity_number, 13) where attributes["Level"] == "Warning"
          - set(severity_text, "ERROR") where attributes["Level"] == "Error"
          - set(severity_number, 17) where attributes["Level"] == "Error"
          - set(severity_text, "FATAL") where attributes["Level"] == "Fatal"
          - set(severity_number, 21) where attributes["Level"] == "Fatal"
exporters:
  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true
  
  prometheusremotewrite:
    endpoint: http://mimir:9009/api/v1/push
    resource_to_telemetry_conversion:
      enabled: true # Convert resource attributes to metric labels

  otlphttp:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true

extensions:
  health_check:
  pprof:
  zpages:

service:
  extensions: [ pprof, zpages, health_check ]
  # Doc. https://opentelemetry.io/docs/collector/internal-telemetry/
  telemetry:
    metrics:
      address: 127.0.0.1:8888
      level: detailed
    logs:
      level: DEBUG
      encoding: json
      processors:
        - batch:
            exporter:
              otlp:
                protocol: http/protobuf
                endpoint: http://otelcollector:4318
    traces:
      processors:
        - batch:
            exporter:
              otlp:
                protocol: grpc/protobuf
                endpoint: http://otelcollector:4317
  pipelines:
    logs:
      receivers: [ otlp, filelog ]
      processors: [ memory_limiter, transform/parse_json_body, resourcedetection/system, batch ]
      exporters: [ otlphttp ]
    traces:
      receivers: [ otlp ]
      processors: [ memory_limiter, resourcedetection/system, batch ]
      exporters: [ otlp ]
    metrics:
      receivers: [ otlp, prometheus ]
      processors: [ memory_limiter, resourcedetection/system, batch ]
      exporters: [ prometheusremotewrite ]
